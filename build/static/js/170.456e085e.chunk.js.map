{"version":3,"file":"static/js/170.456e085e.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthRegister.js","utils/password-strength.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSocialGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.9887eb8eb43729cb99f402cfa0de3c44.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        [],\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import React from 'react';\n// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nfunction AuthFooter() {\n    return (\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Typography\n                variant=\"subtitle2\"\n                component={Link}\n                href=\"https://berrydashboard.io\"\n                target=\"_blank\"\n                underline=\"hover\"\n            >\n                berrydashboard.io\n            </Typography>\n            <Typography\n                variant=\"subtitle2\"\n                component={Link}\n                href=\"https://codedthemes.com\"\n                target=\"_blank\"\n                underline=\"hover\"\n            >\n                &copy; codedthemes.com\n            </Typography>\n        </Stack>\n    );\n}\n\nexport default AuthFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nfunction AuthCardWrapper({ children, ...other }) {\n    return (\n        <MainCard\n            sx={{\n                maxWidth: { xs: 400, lg: 475 },\n                margin: { xs: 2.5, md: 3 },\n                '& > *': {\n                    flexGrow: 1,\n                    flexBasis: '50%',\n                },\n            }}\n            content={false}\n            {...other}\n        >\n            <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n        </MainCard>\n    );\n}\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh',\n}));\n\nexport default AuthWrapper1;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery,\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport Google from 'assets/images/icons/social-google.svg';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nfunction FirebaseRegister({ ...others }) {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = useState(false);\n    const [checked, setChecked] = useState(true);\n\n    const [strength, setStrength] = useState(0);\n    const [level, setLevel] = useState();\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <>\n            <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                spacing={2}\n            >\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            onClick={googleHandler}\n                            size=\"large\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100],\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img\n                                    src={Google}\n                                    alt=\"google\"\n                                    width={16}\n                                    height={16}\n                                    style={{\n                                        marginRight: matchDownSM ? 8 : 16,\n                                    }}\n                                />\n                            </Box>\n                            Sign up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\n                        <Divider\n                            sx={{ flexGrow: 1 }}\n                            orientation=\"horizontal\"\n                        />\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`,\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider\n                            sx={{ flexGrow: 1 }}\n                            orientation=\"horizontal\"\n                        />\n                    </Box>\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                >\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">\n                            Sign up with Email address\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null,\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                        .email('Must be a valid email')\n                        .max(255)\n                        .required('Email is required'),\n                    password: Yup.string()\n                        .max(255)\n                        .required('Password is required'),\n                })}\n                onSubmit={async (\n                    values,\n                    { setErrors, setStatus, setSubmitting },\n                ) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values,\n                }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">\n                                Email Address / Username\n                            </InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText\n                                    error\n                                    id=\"standard-weight-helper-text--register\"\n                                >\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">\n                                Password\n                            </InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={\n                                                handleMouseDownPassword\n                                            }\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? (\n                                                <Visibility />\n                                            ) : (\n                                                <VisibilityOff />\n                                            )}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText\n                                    error\n                                    id=\"standard-weight-helper-text-password-register\"\n                                >\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box sx={{ mb: 2 }}>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item>\n                                            <Box\n                                                style={{\n                                                    backgroundColor:\n                                                        level?.color,\n                                                }}\n                                                sx={{\n                                                    width: 85,\n                                                    height: 8,\n                                                    borderRadius: '7px',\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                fontSize=\"0.75rem\"\n                                            >\n                                                {level?.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid\n                            container\n                            alignItems=\"center\"\n                            justifyContent=\"space-between\"\n                        >\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) =>\n                                                setChecked(event.target.checked)\n                                            }\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                component={Link}\n                                                to=\"#\"\n                                            >\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>\n                                    {errors.submit}\n                                </FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n}\n\nexport default FirebaseRegister;\n","/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => /[0-9]/.test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => /[a-z]/.test(number) && /[A-Z]/.test(number);\n\n// has special chars\nconst hasSpecial = (number) => /[!#@$%^&*)(+=._-]/.test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\nimport AuthRegister from '../auth-forms/AuthRegister';\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nfunction Register() {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"flex-end\"\n                sx={{ minHeight: '100vh' }}\n            >\n                <Grid item xs={12}>\n                    <Grid\n                        container\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        sx={{ minHeight: 'calc(100vh - 68px)' }}\n                    >\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"/\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={\n                                                matchDownSM\n                                                    ? 'column-reverse'\n                                                    : 'row'\n                                            }\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack\n                                                    alignItems=\"center\"\n                                                    justifyContent=\"center\"\n                                                    spacing={1}\n                                                >\n                                                    <Typography\n                                                        color={\n                                                            theme.palette\n                                                                .secondary.main\n                                                        }\n                                                        gutterBottom\n                                                        variant={\n                                                            matchDownSM\n                                                                ? 'h3'\n                                                                : 'h2'\n                                                        }\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={\n                                                            matchDownSM\n                                                                ? 'center'\n                                                                : 'inherit'\n                                                        }\n                                                    >\n                                                        Enter your credentials\n                                                        to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            item\n                                            container\n                                            direction=\"column\"\n                                            alignItems=\"center\"\n                                            xs={12}\n                                        >\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n}\n\nexport default Register;\n"],"names":["scripted","useRef","useEffect","current","direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","others","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","console","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","count","temp","number","strengths","length","test","hasNumber","hasSpecial","hasMixed","strengthIndicator","label","color","Grid","container","spacing","item","AnimateButton","Button","fullWidth","onClick","size","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","type","defaultValue","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","fontSize","FormControlLabel","control","Checkbox","to","mt","disableElevation","AuthCardWrapper","Logo","Stack","secondary","main","gutterBottom","textAlign","AuthRegister","textDecoration","AuthFooter"],"sourceRoot":""}