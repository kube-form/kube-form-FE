{"version":3,"file":"static/js/809.f7968b63.chunk.js","mappings":"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","sources":["ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","views/utilities/styles.jsx","views/utilities/task.jsx","views/utilities/column.jsx","views/utilities/remove.jsx","views/utilities/modal.js","views/utilities/Cluster.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// ==============================|| AVATAR ||============================== //\n\nfunction Avatar({ color, outline, size, sx, ...others }) {\n    const theme = useTheme();\n\n    const colorSX = color &&\n        !outline && {\n            color: theme.palette.background.paper,\n            bgcolor: `${color}.main`,\n        };\n    const outlineSX = outline && {\n        color: color ? `${color}.main` : `primary.main`,\n        bgcolor: theme.palette.background.paper,\n        border: '2px solid',\n        borderColor: color ? `${color}.main` : `primary.main`,\n    };\n    let sizeSX = {};\n    switch (size) {\n        case 'badge':\n            sizeSX = {\n                width: theme.spacing(3.5),\n                height: theme.spacing(3.5),\n            };\n            break;\n        case 'xs':\n            sizeSX = {\n                width: theme.spacing(4.25),\n                height: theme.spacing(4.25),\n            };\n            break;\n        case 'sm':\n            sizeSX = {\n                width: theme.spacing(5),\n                height: theme.spacing(5),\n            };\n            break;\n        case 'lg':\n            sizeSX = {\n                width: theme.spacing(9),\n                height: theme.spacing(9),\n            };\n            break;\n        case 'xl':\n            sizeSX = {\n                width: theme.spacing(10.25),\n                height: theme.spacing(10.25),\n            };\n            break;\n        case 'md':\n            sizeSX = {\n                width: theme.spacing(7.5),\n                height: theme.spacing(7.5),\n            };\n            break;\n        default:\n            sizeSX = {};\n    }\n\n    return (\n        <MuiAvatar\n            sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }}\n            {...others}\n        />\n    );\n}\n\nAvatar.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.string,\n    outline: PropTypes.bool,\n    size: PropTypes.string,\n    sx: PropTypes.object,\n};\n\nexport default Avatar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { useTheme } from '@mui/material/styles';\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\n\n// project imports\nimport Avatar from '../extended/Avatar';\n\n// ==============================|| CARD SECONDARY ACTION ||============================== //\n\nfunction CardSecondaryAction({ title, link, icon }) {\n    const theme = useTheme();\n\n    return (\n        <Tooltip title={title || 'Reference'} placement=\"left\">\n            <ButtonBase disableRipple>\n                {!icon && (\n                    <Avatar\n                        component={Link}\n                        href={link}\n                        target=\"_blank\"\n                        alt=\"MUI Logo\"\n                        size=\"badge\"\n                        color=\"primary\"\n                        outline\n                    >\n                        <svg\n                            width=\"500\"\n                            height=\"500\"\n                            viewBox=\"0 0 500 500\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <g clipPath=\"url(#clip0)\">\n                                <path\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\n                                    fill={theme.palette.primary[800]}\n                                />\n                                <path\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                                <path\n                                    d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\"\n                                    fill={theme.palette.primary[800]}\n                                />\n                                <path\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0\">\n                                    <rect\n                                        width=\"300\"\n                                        height=\"238.3\"\n                                        fill=\"white\"\n                                        transform=\"translate(100 131)\"\n                                    />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                    </Avatar>\n                )}\n                {icon && (\n                    <Avatar\n                        component={Link}\n                        href={link}\n                        target=\"_blank\"\n                        size=\"badge\"\n                        color=\"primary\"\n                        outline\n                    >\n                        {icon}\n                    </Avatar>\n                )}\n            </ButtonBase>\n        </Tooltip>\n    );\n}\n\nCardSecondaryAction.propTypes = {\n    icon: PropTypes.node,\n    link: PropTypes.string,\n    title: PropTypes.string,\n};\n\nexport default CardSecondaryAction;\n","import styled from 'styled-components';\n\nexport const AllArea = styled.div`\n    -webkit-flex-flow: row wrap;\n    flex-flow: row wrap;\n    position: relative;\n`;\nexport const Title = styled.h3`\n    padding: 8px;\n    font-size: 32px;\n    text-align: center;\n`;\n\nexport const List = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    display: flex;\n    -webkit-flex-flow: row wrap;\n    flex-flow: row wrap;\n    /* margin-top: 10px; */\n    border-radius: 12px;\n    @media (max-width: 500px) {\n        position: relative;\n        background-color: gray;\n    }\n    @media (min-width: 500px) {\n        position: absolute;\n        width: 250px;\n        max-height: 600px;\n        background-color: lightslategray;\n    }\n`;\n\nexport const Container = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    -webkit-flex-flow: row wrap;\n    flex-flow: row wrap;\n    border-radius: 12px;\n    @media (max-width: 500px) {\n        position: relative;\n        background-color: lightblue;\n    }\n    @media (min-width: 500px) {\n        position: absolute;\n        width: 250px;\n        max-height: 600px;\n        background-color: lightskyblue;\n    }\n`;\n\nexport const ColContainer = styled.div`\n    margin: 8px;\n    border: 3px solid lightgrey;\n    border-radius: 10px;\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Item = styled.div`\n    /* display: flex; */\n    /* :hover {\n    background-color: ${(props) => (props.area === 'area' ? 'blue' : 'green')};\n  } */\n`;\n\nexport const TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.5s ease;\n    background-color: ${(props) => (props.isDraggingOver ? 'orange' : 'white')};\n    flex-grow: 1;\n    min-height: 100px;\n`;\n\nexport const TaskContainer = styled.div`\n    position: relative;\n    border: 2px solid lightgrey;\n    border-radius: 3px;\n    padding: 8px;\n    margin-bottom: 8px;\n    flex-direction: column;\n    background-color: ${(props) =>\n        // eslint-disable-next-line no-nested-ternary\n        props.isDragDisabled\n            ? 'lightgrey'\n            : props.isDragging\n            ? 'lightgreen'\n            : 'white'};\n    display: flex;\n`;\n\nexport const RemoveBox = styled.div`\n    text-align: center;\n\n    border: 2px solid lightgrey;\n    border-radius: 3px;\n    padding: 8px;\n`;\n\nexport const RemoveArea = styled.div`\n    transition: background-color 0.5s ease;\n    background-color: ${(props) =>\n        props.isDraggingOver ? 'black' : 'lightgray'};\n    flex-grow: 1;\n    min-height: 100px;\n    display: inline-block;\n    width: 100px;\n    height: 100px;\n    border-radius: 60px;\n`;\n\nexport const IconBox = styled.div`\n    margin-top: 30px;\n    margin-bottom: 30px;\n`;\n\nexport const RemoveDiv = styled.div`\n    position: absolute;\n\n    @media (max-width: 500px) {\n        position: relative;\n        /* display: inline-flex; */\n    }\n    @media (min-width: 500px) {\n        position: relative;\n        display: inline-flex;\n        top: 30px;\n        left: 33.33%;\n        margin-top: 10px;\n    }\n`;\n\nexport const ButtonBox = styled.div`\n    position: relative;\n    text-align: center;\n    @media (min-width: 500px) {\n        position: relative;\n        margin-top: 50px;\n    }\n`;\n\nexport const ImgArea = styled.div`\n    margin-left: 250px;\n    width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { TaskContainer } from './styles';\n\nexport default function Task({ item, index }) {\n    return (\n        <Draggable key={item.id} draggableId={item.id} index={index}>\n            {(provided, snapshot) => (\n                <TaskContainer\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    isDragging={snapshot.isDragging}\n                >\n                    {item.content}\n                </TaskContainer>\n            )}\n        </Draggable>\n    );\n}\n\nTask.propTypes = {\n    item: PropTypes.object.isRequired,\n    index: PropTypes.number,\n};\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task';\nimport { Title, ColContainer, TaskList, Item } from './styles';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function Column({ items, droppableId }) {\n    return (\n        <ColContainer>\n            <Title>{`k8s ${droppableId}`}</Title>\n            <Droppable\n                droppableId={droppableId}\n                // isDropDisabled={isDropDisabled}\n            >\n                {(provided, snapshot) => (\n                    <TaskList\n                        ref={provided.innerRef}\n                        isDraggingOver={snapshot.isDraggingOver}\n                        {...provided.droppableProps}\n                    >\n                        <Item area={droppableId}>\n                            {items.map((item, index) => (\n                                <Task key={item.id} item={item} index={index} />\n                            ))}\n                        </Item>\n                        {provided.placeholder}\n                    </TaskList>\n                )}\n            </Droppable>\n        </ColContainer>\n    );\n}\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Title, RemoveBox, RemoveArea, IconBox, RemoveDiv } from './styles';\n\n// eslint-disable-next-line react/prop-types\n// eslint-disable-next-line no-unused-vars\nexport default function Remove({ key, items, droppableId, target }) {\n    return (\n        <RemoveDiv>\n            <Title>\n                {droppableId} <br /> {` item`}\n            </Title>\n            <RemoveBox>\n                <Droppable\n                    droppableId={droppableId}\n                    // isDropDisabled={isDropDisabled}\n                >\n                    {(provided, snapshot) => (\n                        <RemoveArea\n                            ref={provided.innerRef}\n                            isDraggingOver={snapshot.isDraggingOver}\n                            {...provided.droppableProps}\n                        >\n                            <IconBox>\n                                <DeleteIcon\n                                    fontSize=\"large\"\n                                    color=\"secondary\"\n                                />\n                            </IconBox>\n                            {provided.placeholder}\n                        </RemoveArea>\n                    )}\n                </Droppable>\n            </RemoveBox>\n        </RemoveDiv>\n    );\n}\n","import React from 'react';\nimport './css/modal.css';\n\nexport default function Modal(props) {\n    // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n    // eslint-disable-next-line react/prop-types\n    const { open, close, header } = props;\n\n    return (\n        // 모달이 열릴때 openModal 클래스가 생성된다.\n        <div className={open ? 'openModal modal' : 'modal'}>\n            {open ? (\n                <section>\n                    <header>\n                        {header}\n                        <button type=\"button\" className=\"close\" onClick={close}>\n                            &times;\n                        </button>\n                    </header>\n                    <main>{props.children}</main>\n                    <footer>\n                        <button type=\"button\" className=\"close\" onClick={close}>\n                            close\n                        </button>\n                    </footer>\n                </section>\n            ) : null}\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport { v4 as uuid } from 'uuid';\nimport { Button } from '@material-ui/core';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\n\nimport { Column } from './column';\n// import \"@atlaskit/css-reset\";\nimport { ButtonBox, Container, List, ImgArea, AllArea } from './styles';\nimport Remove from './remove';\nimport Modal from './modal';\nimport clusterImg from './img/Cluster.jpeg';\nimport './css/global.css';\n\nconst Items = [\n    {\n        id: uuid(),\n        content: 'Tomcat',\n    },\n    {\n        id: uuid(),\n        content: 'Java',\n    },\n    {\n        id: uuid(),\n        content: 'Debian',\n    },\n    {\n        id: uuid(),\n        content: 'PHP',\n    },\n    {\n        id: uuid(),\n        content: 'MySQL',\n    },\n    {\n        id: uuid(),\n        content: 'Ubuntu',\n    },\n    {\n        id: uuid(),\n        content: 'React',\n    },\n    {\n        id: uuid(),\n        content: 'Node.js',\n    },\n    {\n        id: uuid(),\n        content: 'Flask',\n    },\n];\nconsole.log(Items);\nexport default function Cluster() {\n    const [items, setItems] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    // splice(start, deleteCnt, insertVal) start부터 deleteCnt개 제거, insertVal몇개 넣어라\n\n    const reorder = (current, startIndex, endIndex) => {\n        const result = Array.from(current);\n        const [removed] = result.splice(startIndex, 1); // startIndex 한개 removed로\n        result.splice(endIndex, 0, removed); // 마지막에 removed추가\n\n        return result;\n    };\n\n    const copy = (source, current, droppableSource, droppableDestination) => {\n        // console.log(droppableDestination, \"==> dest\", destination);\n        const item = source[droppableSource.index];\n        const idx = droppableDestination.index;\n        const arr = Array.from(current);\n\n        arr.splice(idx, 0, { ...item, id: uuid() });\n        setItems(arr);\n    };\n\n    const removeItem = (current, dropSource) => {\n        const arr = Array.from(current);\n\n        arr.splice(dropSource.index, 1);\n        setItems(arr);\n    };\n\n    const onDragEnd = (result) => {\n        const { destination, source } = result;\n        // droppableId는 어느 column에 위치하는지, index는 해당 column에서 몇번째 task인지\n        console.log(\n            '도착지 index 도착지 droppableId',\n            destination?.index,\n            destination?.droppableId,\n        );\n        console.log(\n            '출발지 index 출발지 droppableId',\n            source.index,\n            source.droppableId,\n        );\n\n        // 올바른 droppable 위에 두지 않았으므로 그냥 리턴\n        if (!destination) return;\n\n        // 같은자리에 두면 그냥 리턴\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        )\n            return;\n\n        const start = source.droppableId;\n        const finish = destination.droppableId;\n        console.log(source);\n        if (start === 'area' && start === finish) {\n            console.log('==');\n            setItems(reorder(items, source.index, destination.index));\n        }\n        if (start === 'Items' && finish === 'area') {\n            copy(Items, items, source, destination);\n        }\n        if (start === 'area' && finish === 'remove') {\n            removeItem(items, source);\n        }\n    };\n\n    const OpenModal = () => {\n        setModalOpen(true);\n    };\n    const CloseModal = () => {\n        setModalOpen(false);\n    };\n    return (\n        <MainCard\n            title=\"Cluster DnD\"\n            secondary={<SecondaryAction link=\"https://kubernetes.io/ko/\" />}\n        >\n            <AllArea>\n                <DragDropContext\n                    // onDragStart={onDragStart}\n                    // onDragUpdate={onDragUpdate}\n                    onDragEnd={onDragEnd}\n                >\n                    <List>\n                        <Column items={Items} droppableId=\"Items\" />\n                    </List>\n\n                    <ImgArea>\n                        <img className=\"img\" src={clusterImg} alt=\"cluster\" />\n                    </ImgArea>\n                    <Container>\n                        <Column items={items} droppableId=\"area\" />\n                    </Container>\n                    <Remove items={items} droppableId=\"remove\" />\n                </DragDropContext>\n                <ButtonBox>\n                    <Button\n                        onClick={() => {\n                            setTimeout(OpenModal, 2000);\n                        }}\n                        color=\"primary\"\n                    >\n                        Submit\n                    </Button>\n                </ButtonBox>\n                <Modal\n                    open={modalOpen}\n                    close={CloseModal}\n                    header=\"제출 확인 창\"\n                >\n                    제출이 완료되었습니다!\n                </Modal>\n            </AllArea>\n        </MainCard>\n    );\n}\n"],"names":["color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","title","link","icon","Tooltip","placement","ButtonBase","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id","transform","AllArea","styled","Title","List","Container","ColContainer","Item","props","area","TaskList","isDraggingOver","TaskContainer","isDragDisabled","isDragging","RemoveBox","RemoveArea","IconBox","RemoveDiv","ButtonBox","ImgArea","Task","item","index","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","content","Column","items","droppableId","droppableProps","map","placeholder","Remove","key","Delete","fontSize","Modal","open","close","header","className","type","onClick","children","Items","uuid","Cluster","useState","setItems","modalOpen","setModalOpen","OpenModal","MainCard","secondary","onDragEnd","result","destination","source","console","log","start","finish","current","startIndex","endIndex","Array","from","splice","removed","reorder","droppableSource","droppableDestination","idx","arr","copy","dropSource","removeItem","src","clusterImg","Button","setTimeout"],"sourceRoot":""}